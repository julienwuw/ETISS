#include "etiss/Misc.h"
#include "etiss/Plugin.h"
#include "etiss/interfaces/Delegate.h"

#include "tlmu/compiled/include/tlmu/tlmu.h"


class qemucpu : public etiss::CoroutinePlugin
{
    friend void etiss_get_dmi_ptr(void *o, uint64_t addr, struct tlmu_dmi *dmi);
    friend int etiss_bus_access(void *o, int64_t clk, int rw,uint64_t addr, void *data, int len);
    friend void etiss_bus_access_dbg(void *o, int64_t clk, int rw, uint64_t addr, void *data, int len);
    friend void etiss_sync(void *o, int64_t time_ns);
public:
    qemucpu();
    virtual ~qemucpu();
    virtual int32_t execute();
    bool valid();

protected:
    inline std::string _getPluginName() const
    {
        return "qemucpu";
    }
    virtual void init(ETISS_CPU * cpu,ETISS_System * system,etiss::CPUArch * arch);
    virtual void cleanup();
    virtual void addedToCPUCore(etiss::CPUCore * core);
    virtual void removedFromCPUCore(etiss::CPUCore * core);
private:
    struct tlmu tlmu;
    bool valid_;
    std::string cfgfile;
    std::vector<const char *> args;

};
